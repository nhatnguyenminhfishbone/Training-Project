// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingProject.Core.Repositories;

namespace TrainingProject.Core.Migrations
{
    [DbContext(typeof(TrainingProjectDbContext))]
    partial class TrainingProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrainingProject.Core.Entities.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("TrainingProject.Core.Entities.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemperatureC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temperatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TemperatureC = "33"
                        },
                        new
                        {
                            Id = 2,
                            TemperatureC = "34"
                        },
                        new
                        {
                            Id = 3,
                            TemperatureC = "35"
                        },
                        new
                        {
                            Id = 4,
                            TemperatureC = "36"
                        },
                        new
                        {
                            Id = 5,
                            TemperatureC = "37"
                        });
                });

            modelBuilder.Entity("TrainingProject.Core.Entities.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemperatureId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TemperatureId");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Cold",
                            TemperatureId = 1,
                            Type = "1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Mild",
                            Type = "0"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Warm",
                            TemperatureId = 3,
                            Type = "1"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Balmy",
                            TemperatureId = 4,
                            Type = "0"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2020, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Hot",
                            TemperatureId = 5,
                            Type = "1"
                        });
                });

            modelBuilder.Entity("TrainingProject.Core.Entities.WeatherForecast", b =>
                {
                    b.HasOne("TrainingProject.Core.Entities.Temperature", "Temperature")
                        .WithMany()
                        .HasForeignKey("TemperatureId");
                });
#pragma warning restore 612, 618
        }
    }
}
